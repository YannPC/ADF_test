{
	"name": "CustomerID_OrderID_DataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CustomerIDinput",
						"type": "DatasetReference"
					},
					"name": "CustomerID",
					"description": "Data source CustomerID from Excel "
				},
				{
					"dataset": {
						"referenceName": "OrderidInput",
						"type": "DatasetReference"
					},
					"name": "OrderID"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CustomerIdOrderIDoutput1",
						"type": "DatasetReference"
					},
					"name": "Sink",
					"description": "Final destination "
				}
			],
			"transformations": [
				{
					"name": "SelectByID"
				},
				{
					"name": "InnerJoinCxIDOrID"
				},
				{
					"name": "filterbyAge"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CustomerID",
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> OrderID",
				"CustomerID select(mapColumn(",
				"          Column_1,",
				"          Column_4,",
				"          Column_3,",
				"          Column_5",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectByID",
				"SelectByID, OrderID join(Column_4 == OrderID@Column_1,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> InnerJoinCxIDOrID",
				"InnerJoinCxIDOrID filter(SelectByID@Column_3 < '20') ~> filterbyAge",
				"filterbyAge sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          year as string,",
				"          AggregateComedyRating as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Sink"
			]
		}
	}
}